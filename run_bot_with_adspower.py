#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å AdsPower
–°–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö (–∫–∞—Ä—Ç—ã, –∞–¥—Ä–µ—Å–∞, –ø—Ä–æ–∫—Å–∏) –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ü–∏–∫–ª
"""

import subprocess
import time
import sys
import os
import random
import string
from create_profile import create_profile, start_browser, stop_browser

# –ú–ê–°–°–ò–í–´ –î–ê–ù–ù–´–• –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò –ó–ê–ö–ê–ó–û–í

# –ú–∞—Å—Å–∏–≤ –∏–º–µ–Ω - –¥–≤—É–º–µ—Ä–Ω—ã–π: –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–º–µ–Ω–∏
FIRST_NAMES = [
    ["Emma", "Emily", "Emilia", "Emmy", "Emma-Lee"],         # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 2
    ["James", "Jim", "Jimmy", "Jamie", "Jameson"],         # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 3
    ["Sophia", "Sophie", "Sofia", "Soph", "Sophia-Rose"],         # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 4
    ["Alexander", "Alex", "Alexis", "Alec", "Alexandria"]        # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 5
]

# –ú–∞—Å—Å–∏–≤ —Ñ–∞–º–∏–ª–∏–π - –¥–≤—É–º–µ—Ä–Ω—ã–π: –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ñ–∞–º–∏–ª–∏–∏
LAST_NAMES = [
    ["Davis", "Davies", "Davis-Jones", "Davis-Brown", "Davis-Taylor"], # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 2
    ["Wilson", "Wills", "Wilson-Smith", "Wilson-Brown", "Wilson-Davis"], # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 3
    ["Moore", "Moor", "Moore-Taylor", "Moore-Wilson", "Moore-Brown"], # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 4
    ["Taylor", "Tay", "Taylor-Moore", "Taylor-Wilson", "Taylor-Davis"] # 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã 5
]

# –ú–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ—Ä—Ç–µ–∂–µ–π (–Ω–æ–º–µ—Ä, —Å—Ä–æ–∫, CVC)
CARDS = [
    ("5573 7700 1412 2786", "09/30", "904"),
    ("5573 7700 1409 2856", "09/30", "848")
]

# –°—Ç–∞—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
STATIC_ADDRESS = {
    "address": "_p_r_i_n_c_e_s_s_ _t_o_w_e_r_",
    "address_line2": "_4_2_0_8_ _4_2_ _f_l_o_o_r_", 
    "city": "Dubai",
    "province": "Dubai Marina",
    "phone": "508698540"
}

# –ü—Ä–æ–∫—Å–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –∏–∑ AdsPower –±—Ä–∞—É–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ API

def generate_email(name, last_name):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç email –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 4–±—É–∫–≤—ã + –∏–º—è + —Ñ–∞–º–∏–ª–∏—è + 2—Ü–∏—Ñ—Ä—ã + 7–±—É–∫–≤@gmail.com"""
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 4 —Å–ª—É—á–∞–π–Ω—ã–µ –±—É–∫–≤—ã
    prefix = ''.join(random.choices(string.ascii_letters, k=4))
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 10 –¥–æ 99
    number = random.randint(10, 99)
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 7 —Å–ª—É—á–∞–π–Ω—ã—Ö –±—É–∫–≤
    suffix = ''.join(random.choices(string.ascii_letters, k=4))
    return f"{prefix}{name}{last_name}{number}{suffix}@gmail.com"

def generate_password():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ 14 —Å–∏–º–≤–æ–ª–æ–≤"""
    return ''.join(random.choices(string.ascii_letters + string.digits, k=14))

def generate_order_data(card_index, name_index):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –∫–∞—Ä—Ç—ã –∏ –∏–º–µ–Ω–∏"""
    card_number, card_expiry, card_cvc = CARDS[card_index]  # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä—Ç–µ–∂
    first_name = FIRST_NAMES[card_index][name_index]        # –ë–µ—Ä–µ–º –∏–º—è –∏–∑ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ –∫–∞—Ä—Ç—ã
    last_name = LAST_NAMES[card_index][name_index]          # –ë–µ—Ä–µ–º —Ñ–∞–º–∏–ª–∏—é –∏–∑ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ –∫–∞—Ä—Ç—ã
    
    return {
        # –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
        "email": generate_email(first_name, last_name),
        "password": generate_password(),
        
        # –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∞–≤–∫–∏
        "first_name": first_name,
        "last_name": last_name,
        "address": STATIC_ADDRESS["address"],
        "address_line2": STATIC_ADDRESS["address_line2"],
        "city": STATIC_ADDRESS["city"],
        "province": STATIC_ADDRESS["province"],
        "phone": STATIC_ADDRESS["phone"],
        
        # –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã
        "card_number": card_number,
        "card_expiry": card_expiry,
        "card_cvc": card_cvc,
        "card_name": f"{first_name} {last_name}"
    }

def run_single_attempt(order_data, attempt_num):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–¥–Ω—É –ø–æ–ø—ã—Ç–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ"""
    print(f"\nüìã –ü–æ–ø—ã—Ç–∫–∞ #{attempt_num}:")
    print(f"   üë§ {order_data['first_name']} {order_data['last_name']}")
    print(f"   üìß {order_data['email']}")
    print(f"   üí≥ {order_data['card_number']}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞
        from bot_example import run_single_registration
        success = run_single_registration(order_data)
        
        if success:
            print(f"‚úÖ –ü–æ–ø—ã—Ç–∫–∞ #{attempt_num} —É—Å–ø–µ—à–Ω–∞!")
            return True
        else:
            print(f"‚ùå –ü–æ–ø—ã—Ç–∫–∞ #{attempt_num} –Ω–µ —É–¥–∞–ª–∞—Å—å!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–ø—ã—Ç–∫–µ #{attempt_num}: {e}")
        return False

def run_card_attempts(card_index, order_counter):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç 3 –ø–æ–ø—ã—Ç–∫–∏ –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç—ã –≤ –æ–¥–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ"""
    print(f"\n{'='*60}")
    print(f"üöÄ –ö–ê–†–¢–ê #{card_index + 1}: {CARDS[card_index][0]}")
    print(f"üåê –°–æ–∑–¥–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –ø—Ä–æ–∫—Å–∏ –∏–∑ AdsPower")
    print(f"{'='*60}")
    
    user_id = None
    browser_info = None
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å –ø—Ä–æ–∫—Å–∏ –∏–∑ AdsPower
        print("1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å –ø—Ä–æ–∫—Å–∏ –∏–∑ AdsPower...")
        proxy_index = order_counter % 100  # –ò—Å–ø–æ–ª—å–∑—É–µ–º order_counter –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–∫—Å–∏
        user_id = create_profile_with_proxy(proxy_index)
        
        if not user_id:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å!")
            return False
        
        print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: {user_id}")
        time.sleep(5)
        
        # 2. –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        print("2Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
        browser_info = start_browser(user_id)
        
        if not browser_info["success"]:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä: {browser_info['error']}")
            return False
        
        print(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω: {browser_info['debug_port']}")
        time.sleep(15)
        
        # 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞
        os.environ['ADSPOWER_DEBUG_PORT'] = str(browser_info['debug_port'])
        if 'webdriver_path' in browser_info:
            os.environ['ADSPOWER_WEBDRIVER_PATH'] = browser_info['webdriver_path']
        
        # 4. –î–µ–ª–∞–µ–º 5 –ø–æ–ø—ã—Ç–æ–∫ –≤ –æ–¥–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
        card_success = False
        for attempt in range(5):
            name_index = attempt
            order_data = generate_order_data(card_index, name_index)
            
            success = run_single_attempt(order_data, attempt + 1)
            
            if success:
                card_success = True
                print(f"üéâ –ö–ê–†–¢–ê #{card_index + 1} –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ #{attempt + 1}!")
                break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ–ø—ã—Ç–æ–∫
            else:
                if attempt < 4:  # –ï—Å–ª–∏ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
                    print(f"‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
                    time.sleep(5)
        
        return card_success
            
    except KeyboardInterrupt:
        print(f"\n‚è∏Ô∏è –ö–∞—Ä—Ç–∞ #{card_index + 1} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ –∫–∞—Ä—Ç–µ #{card_index + 1}: {e}")
        return False
        
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ü–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫
        if user_id:
            print(f"3Ô∏è‚É£ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∫–∞—Ä—Ç—ã #{card_index + 1}...")
            stop_browser(user_id)
            time.sleep(2)

def create_profile_with_proxy(proxy_index=None):
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Å –ø—Ä–æ–∫—Å–∏ –∏–∑ AdsPower"""
    # –ü—Ä–æ–∫—Å–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ AdsPower —á–µ—Ä–µ–∑ create_profile()
    return create_profile(proxy_index)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ü–∏–∫–ª –ø–æ –∫–∞—Ä—Ç–∞–º –∏ –∏–º–µ–Ω–∞–º"""
    print("=== –ó–ê–ü–£–°–ö –¶–ò–ö–õ–ê –ó–ê–ö–ê–ó–û–í –° ADSPOWER ===")
    print(f"üí≥ –ö–∞—Ä—Ç: {len(CARDS)}")
    print(f"üîÑ –ü–æ–ø—ã—Ç–æ–∫ –Ω–∞ –∫–∞—Ä—Ç—É: 5")
    print(f"üìä –ú–∞–∫—Å–∏–º—É–º –∑–∞–∫–∞–∑–æ–≤: {len(CARDS) * 5}")
    print(f"üìç –ê–¥—Ä–µ—Å: {STATIC_ADDRESS['address']}")
    print("=" * 60)
    
    successful_orders = 0
    failed_orders = 0
    order_counter = 0
    
    # –¶–∏–∫–ª –ø–æ –∫–∞—Ä—Ç–∞–º
    for card_index in range(len(CARDS)):
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º 3 –ø–æ–ø—ã—Ç–∫–∏ –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç—ã –≤ –æ–¥–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
            success = run_card_attempts(card_index, order_counter)
            
            if success:
                successful_orders += 1
                print(f"üéâ –ö–ê–†–¢–ê #{card_index + 1} –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            else:
                failed_orders += 1
                print(f"üí• –ö–ê–†–¢–ê #{card_index + 1} –ò–°–ß–ï–†–ü–ê–ù–ê - –≤—Å–µ 5 –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ—É–¥–∞—á–Ω—ã")
            
            order_counter += 1
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∫–∞—Ä—Ç–∞–º–∏ (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π)
            if card_index < len(CARDS) - 1:
                print(f"\n‚è≥ –ü–∞—É–∑–∞ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –∫–∞—Ä—Ç–æ–π...")
                time.sleep(10)
                
        except KeyboardInterrupt:
            print(f"\n‚è∏Ô∏è –¶–∏–∫–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ –∫–∞—Ä—Ç–µ #{card_index + 1}")
            break
        except Exception as e:
            print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–∞—Ä—Ç–µ #{card_index + 1}: {e}")
            failed_orders += 1
            order_counter += 1
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\n{'='*60}")
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {successful_orders}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {failed_orders}")
    print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(successful_orders/(successful_orders+failed_orders)*100):.1f}%" if (successful_orders+failed_orders) > 0 else "0%")
    print(f"{'='*60}")

if __name__ == "__main__":
    main()
