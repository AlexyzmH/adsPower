#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ AdsPower
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.json
"""

import requests
import json


def load_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.json"""
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ config.json: {e}")
        return None


def list_proxies():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–∫—Å–∏ –∏–∑ AdsPower"""
    api_url = "http://127.0.0.1:50325"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ (–ø—É—Å—Ç–æ–π body –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–∫—Å–∏)
    request_data = {}
    
    try:
        response = requests.post(f"{api_url}/api/v2/proxy-list/list", json=request_data)
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get("code") == 0:
                proxies = result.get("data", {}).get("list", [])
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–∫—Å–∏: {len(proxies)}")
                
                for i, proxy in enumerate(proxies):
                    proxy_id = proxy.get('proxy_id')
                    proxy_type = proxy.get('type')
                    proxy_host = proxy.get('host')
                    proxy_port = proxy.get('port')
                    print(f"   {i+1}. ID: {proxy_id} | {proxy_type}://{proxy_host}:{proxy_port}")
                
                return proxies
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {result.get('msg')}")
                return []
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return []


def create_profile(proxy_index=None):
    """–°–æ–∑–¥–∞–µ—Ç –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å –≤ AdsPower –∏—Å–ø–æ–ª—å–∑—É—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    config = load_config()
    if not config:
        return None
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    profile_config = config["profiles"][0]
    
    # URL API AdsPower
    api_url = "http://127.0.0.1:50325"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏
    print("üîç –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏ –∏–∑ AdsPower...")
    proxies = list_proxies()
    
    if not proxies:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏. –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–∫—Å–∏ –≤ AdsPower –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!")
        return None
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–π
    if proxy_index is not None and 0 <= proxy_index < len(proxies):
        proxy = proxies[proxy_index]
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é –ø—Ä–æ–∫—Å–∏ #{proxy_index + 1}: {proxy.get('type')}://{proxy.get('host')}:{proxy.get('port')}")
    else:
        import random
        proxy = random.choice(proxies)
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ–∫—Å–∏: {proxy.get('type')}://{proxy.get('host')}:{proxy.get('port')}")
    
    proxy_id = proxy.get('proxy_id')
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    profile_data = {
        "name": profile_config["name"],
        "group_id": "0",
        "remark": "–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç",
        "proxyid": proxy_id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–∫—Å–∏
    }
    
    print(f"–°–æ–∑–¥–∞—é –ø—Ä–æ—Ñ–∏–ª—å: {profile_config['name']}")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        response = requests.post(f"{api_url}/api/v1/user/create", json=profile_data)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
        if response.status_code == 200:
            result = response.json()
            
            if result.get("code") == 0:
                user_id = result.get("data", {}).get("id")
                print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                print(f"   –ò–º—è: {profile_config['name']}")
                print(f"   ID: {user_id}")
                print(f"   –ü—Ä–æ–∫—Å–∏ ID: {proxy_id}")
                return user_id
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {result.get('msg')}")
                return None
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None


def start_browser(user_id):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç WebDriver –¥–∞–Ω–Ω—ã–µ"""
    api_url = "http://127.0.0.1:50325"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ (API v2)
    browser_data = {
        "profile_id": user_id,
        "headless": "0",  # 0 = –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º, 1 = headless
        "last_opened_tabs": "1",  # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–∫–ª–∞–¥–æ–∫
        "proxy_detection": "1",  # –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∫—Å–∏
        "password_filling": "0",  # –ù–µ –∑–∞–ø–æ–ª–Ω—è—Ç—å –ø–∞—Ä–æ–ª–∏
        "password_saving": "0",  # –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–∞—Ä–æ–ª–∏
        "cdp_mask": "1",  # –ú–∞—Å–∫–∏—Ä–æ–≤–∞—Ç—å CDP –¥–µ—Ç–µ–∫—Ü–∏—é
        "delete_cache": "0"  # –ù–µ —É–¥–∞–ª—è—Ç—å –∫—ç—à
    }
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è {user_id}...")
    
    try:
        response = requests.post(f"{api_url}/api/v2/browser-profile/start", json=browser_data)
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get("code") == 0:
                data = result.get("data", {})
                ws_selenium = data.get("ws", {}).get("selenium")
                ws_puppeteer = data.get("ws", {}).get("puppeteer")
                debug_port = data.get("debug_port")
                webdriver_path = data.get("webdriver")
                
                print(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
                print(f"   Selenium URL: {ws_selenium}")
                print(f"   Puppeteer URL: {ws_puppeteer}")
                print(f"   Debug Port: {debug_port}")
                print(f"   WebDriver Path: {webdriver_path}")
                
                return {
                    "success": True,
                    "ws_selenium": ws_selenium,
                    "ws_puppeteer": ws_puppeteer,
                    "debug_port": debug_port,
                    "webdriver_path": webdriver_path,
                    "user_id": user_id
                }
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: {result.get('msg')}")
                return {"success": False, "error": result.get('msg')}
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return {"success": False, "error": f"HTTP {response.status_code}"}
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return {"success": False, "error": str(e)}


def stop_browser(user_id):
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è"""
    api_url = "http://127.0.0.1:50325"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ (API v2)
    browser_data = {
        "profile_id": user_id
    }
    
    print(f"üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è {user_id}...")
    
    try:
        response = requests.post(f"{api_url}/api/v2/browser-profile/stop", json=browser_data)
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get("code") == 0:
                print(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞: {result.get('msg')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=== –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è AdsPower ===\n")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    user_id = create_profile()
    
    if user_id:
        print(f"\nüéâ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: {user_id}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        browser_info = start_browser(user_id)
        
        if browser_info["success"]:
            print(f"\nüåê –ë—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏!")
            print(f"   WebDriver URL: {browser_info['ws_url']}")
            print(f"\nüí° –¢–µ–ø–µ—Ä—å –≤–∞—à –±–æ—Ç –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±—Ä–∞—É–∑–µ—Ä—É!")
            print(f"   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WebDriver URL –¥–ª—è Selenium/Playwright")
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            input("\n‚è∏Ô∏è –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä...")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            stop_browser(user_id)
        else:
            print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä: {browser_info['error']}")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.")
    
    print("\n=== –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===")


if __name__ == "__main__":
    main()
